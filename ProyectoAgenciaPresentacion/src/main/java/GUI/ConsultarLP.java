/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BOs.IReporteTramiteBO;
import BOs.ReporteTramiteBO;
import Control.ControladorFlujo;
import DTO.LicenciaDTO;
import DTO.PersonaDTO;
import DTO.PlacaDTO;
import DTO.TramiteDTO;
import Entidades.Persona;
import Validaciones.Validaciones;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlo
 */
public class ConsultarLP extends javax.swing.JFrame {

    IReporteTramiteBO reporteBO = new ReporteTramiteBO();
    private DefaultTableModel model;
    ControladorFlujo controlador;

    public ConsultarLP() {
        initComponents();
        controlador = new ControladorFlujo();
        // Inicializar el modelo de la tabla
        model = new DefaultTableModel();
        personasComboBox.setModel(new DefaultComboBoxModel<>());

        txtRFC.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                validarRFC();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                validarRFC();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                validarRFC();
            }
        });
        txtNombre.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                validarNombre();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                validarNombre();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                validarNombre();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        personasComboBox = new javax.swing.JComboBox<>();
        btnMenu = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtRFC = new javax.swing.JTextField();
        txtFechaNacimiento = new com.toedter.calendar.JDateChooser();
        btnBuscarPersona = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTramites = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();
        p1 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(102, 0, 51));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CONSULTAR TRAMITES");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSonoraa.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoGobierno.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jLabel1)
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setText("INGRESA LOS DATOS:");

        personasComboBox.setBackground(new java.awt.Color(204, 204, 204));
        personasComboBox.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        personasComboBox.setForeground(new java.awt.Color(0, 0, 0));
        personasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personasComboBoxActionPerformed(evt);
            }
        });

        btnMenu.setBackground(new java.awt.Color(204, 0, 51));
        btnMenu.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnMenu.setText("Regresar al men√∫");
        btnMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnConsultar.setBackground(new java.awt.Color(51, 153, 0));
        btnConsultar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnConsultar.setForeground(new java.awt.Color(255, 255, 255));
        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("RFC:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Nombre:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Fecha de nacimiento:");

        txtNombre.setBackground(new java.awt.Color(204, 204, 204));
        txtNombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtRFC.setBackground(new java.awt.Color(204, 204, 204));
        txtRFC.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtFechaNacimiento.setBackground(new java.awt.Color(204, 204, 204));

        btnBuscarPersona.setBackground(new java.awt.Color(153, 153, 153));
        btnBuscarPersona.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBuscarPersona.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarPersona.setText("BUSCAR PERSONA");
        btnBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPersonaActionPerformed(evt);
            }
        });

        tablaTramites.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Fecha de Tramite", "Costo"
            }
        ));
        jScrollPane2.setViewportView(tablaTramites);

        btnLimpiar.setBackground(new java.awt.Color(102, 102, 102));
        btnLimpiar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(btnMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultar)
                .addGap(193, 193, 193))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(128, 128, 128))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre)
                                    .addComponent(txtRFC)
                                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnLimpiar)
                                .addGap(43, 43, 43)
                                .addComponent(btnBuscarPersona)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(personasComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(personasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(p2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btnBuscarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void personasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personasComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personasComboBoxActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // TODO add your handling code here:

        dispose();
        controlador.mostrarVentanaPrincipal(false);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // Obtener el Map de personas del ComboBox
        @SuppressWarnings("unchecked")
        Map<String, Long> personasMap = (Map<String, Long>) personasComboBox.getClientProperty("personasMap");

        // Obtener el nombre de la persona seleccionada del ComboBox
        String nombrePersonaSeleccionada = (String) personasComboBox.getSelectedItem();

        // Verificar si el Map y el nombre de la persona seleccionada no son nulos
        if (personasMap != null && nombrePersonaSeleccionada != null) {
            // Obtener el ID de la persona seleccionada del Map
            Long idPersona = personasMap.get(nombrePersonaSeleccionada);

            // Llamar a los m√©todos necesarios usando el ID de la persona
            // Por ejemplo, llamar al m√©todo para obtener los tr√°mites de la persona por su ID
            List<TramiteDTO> tramites = reporteBO.obtenerTramitesPorPersona(idPersona);

            // Mostrar los tr√°mites en el JTextPane
            mostrarTramitesEnTabla(tramites);
        } else {
            // Manejar el caso si el Map o el nombre de la persona seleccionada son nulos
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna persona.");
        }


    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPersonaActionPerformed
     
    
    // Verificar si el RFC ingresado es v√°lido
    if (!Validaciones.validarRFC(txtRFC.getText().trim())) {
        JOptionPane.showMessageDialog(this, "El RFC ingresado no es v√°lido.");
        return; // No realizar la b√∫squeda si el RFC no es v√°lido
    }
    
    if (!Validaciones.validarNombre(txtNombre.getText().trim())) {
        JOptionPane.showMessageDialog(this, "El Nombre ingresado no es v√°lido.");
        return; // No realizar la b√∫squeda si el RFC no es v√°lido
    }
    
    if(txtFechaNacimiento.getDate() == null){
    JOptionPane.showMessageDialog(this, "La Fecha ingresada no es v√°lida.");
    return;
    }
    
// Obtener los datos de b√∫squeda desde los campos de texto y el selector de fecha
    String rfc = txtRFC.getText().trim();
    String nombre = txtNombre.getText().trim();
    Date fechaSeleccionada = txtFechaNacimiento.getDate();

    // Verificar si al menos uno de los campos no est√° vac√≠o
    if (rfc.isEmpty() && nombre.isEmpty() && fechaSeleccionada == null) {
        JOptionPane.showMessageDialog(this, "Por favor, ingresa al menos un criterio de b√∫squeda.");
        return; // No realizar la b√∫squeda si todos los campos est√°n vac√≠os
    }

    // Crear un objeto PersonaDTO con los datos de b√∫squeda
    PersonaDTO personaBusqueda = new PersonaDTO();
    personaBusqueda.setRfc(rfc);
    personaBusqueda.setNombre(nombre);

    // Convertir la fecha seleccionada a Calendar, si es necesario
    Calendar fechaNacimiento = null;
    if (fechaSeleccionada != null) {
        fechaNacimiento = Calendar.getInstance();
        fechaNacimiento.setTime(fechaSeleccionada);
    }
    personaBusqueda.setFecha_nacimiento(fechaNacimiento);

    // Llamar al m√©todo para buscar personas en ReporteTramiteBO
    List<Persona> personasEncontradas = reporteBO.obtenerListaDePersonas(personaBusqueda);

    // Limpiar el ComboBox antes de agregar las nuevas personas
    personasComboBox.removeAllItems();

    // Crear un Map para asociar el nombre de la persona con su ID
    Map<String, Long> personasMap = new HashMap<>();

    // Llenar el ComboBox con las personas encontradas y asociar su nombre con su ID en el Map
    if (personasEncontradas != null && !personasEncontradas.isEmpty()) {
        for (Persona persona : personasEncontradas) {
            // Agregar el nombre de la persona al ComboBox
            personasComboBox.addItem(persona.getNombre());

            // Asociar el nombre de la persona con su ID en el Map
            personasMap.put(persona.getNombre(), persona.getId());
        }
    } else {
        // Si no se encontraron personas, mostrar un mensaje al usuario
        JOptionPane.showMessageDialog(this, "No se encontraron personas con los criterios de b√∫squeda proporcionados.");
    }

    // Guardar el Map en el ComboBox para poder recuperar el ID de la persona seleccionada
    personasComboBox.putClientProperty("personasMap", personasMap);

    }//GEN-LAST:event_btnBuscarPersonaActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:

        txtNombre.setText("");
        txtRFC.setText("");
        txtFechaNacimiento.setDate(null);
        personasComboBox.setSelectedIndex(-1);
        DefaultTableModel model = (DefaultTableModel) tablaTramites.getModel();
        model.setRowCount(0);


    }//GEN-LAST:event_btnLimpiarActionPerformed

//    public void mostrarTramitesEnTextPane(List<TramiteDTO> tramites) {
//    try {
//        // Limpiar el JTextPane antes de agregar los nuevos datos
//        textPane.setText("");
//
//        // Obtener el documento del JTextPane
//        StyledDocument doc = textPane.getStyledDocument();
//
//        // Crear un AttributeSet para el estilo del texto
//        StyleContext sc = StyleContext.getDefaultStyleContext();
//        AttributeSet style = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, Color.BLACK);
//
//        
//        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
//        
//        // Agregar los tr√°mites al JTextPane
//        for (TramiteDTO tramite : tramites) {
//            // Obtener el nombre del tr√°mite
//            String nombreTramite = obtenerNombreTramite(tramite);
//
//            // Formatear la informaci√≥n del tr√°mite
//            String infoTramite = String.format("Tr√°mite: %s, Fecha: %s, Costo: %.2f\n",
//                     nombreTramite, dateFormat.format(tramite.getFecha().getTime()), tramite.getCosto());
//
//            // Insertar el texto en el documento del JTextPane
//            doc.insertString(doc.getLength(), infoTramite, style);
//        }
//
//        JOptionPane.showMessageDialog(this, "Se gener√≥ la lista de tr√°mites para la persona con RFC: {0}");
//    } catch (Exception ex) {
//        ex.printStackTrace(); // Manejo de errores, aqu√≠ puedes mostrar un mensaje al usuario si lo deseas
//    }
//}
    public void mostrarTramitesEnTabla(List<TramiteDTO> tramites) {
        try {
            // Limpiar la tabla antes de agregar los nuevos datos
            DefaultTableModel model = (DefaultTableModel) tablaTramites.getModel();
            model.setRowCount(0); // Elimina todas las filas actuales de la tabla

            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

            // Agregar los tr√°mites a la tabla
            for (TramiteDTO tramite : tramites) {
                String nombreTramite = obtenerNombreTramite(tramite);
                String fechaFormateada = "";

                // Verificar si la fecha es un objeto Calendar
                if (tramite.getFecha() instanceof Calendar) {
                    Calendar fechaCalendar = (Calendar) tramite.getFecha();
                    Date fecha = fechaCalendar.getTime();
                    fechaFormateada = dateFormat.format(fecha);
                } else {
                    fechaFormateada = "Formato de fecha inv√°lido";
                }

                // Insertar cada dato en la columna correspondiente del modelo de la tabla
                model.addRow(new Object[]{nombreTramite, fechaFormateada, tramite.getCosto()});
            }
        } catch (Exception ex) {
            ex.printStackTrace(); // Manejo de errores, aqu√≠ puedes mostrar un mensaje al usuario si lo deseas
        }
    }

    private String obtenerNombreTramite(TramiteDTO tramite) {
        if (tramite instanceof LicenciaDTO) {
            return "Licencia de Conducir";
        } else if (tramite instanceof PlacaDTO) {
            return "Placa de Veh√≠culo";
        } else {
            return "Tr√°mite Desconocido";
        }
    }
    
    
    
    private void validarRFC() {
        String rfc = txtRFC.getText();

        if (Validaciones.validarRFC(rfc)) {
            p1.setText("<html><font color='green'>‚úì</font></html>");
        } else {
            p1.setText("<html><font color='red'>*</font></html>");
        }
    }
    
    private void validarNombre() {
        String nombre = txtNombre.getText();
        if (Validaciones.validarNombre(nombre)) {
            p2.setText("<html><font color='green'>‚úì</font></html>");
        } else {
            p2.setText("<html><font color='red'>*</font></html>");
        }
    }
    
    

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPersona;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p2;
    private javax.swing.JComboBox<String> personasComboBox;
    private javax.swing.JTable tablaTramites;
    private com.toedter.calendar.JDateChooser txtFechaNacimiento;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    // End of variables declaration//GEN-END:variables
}
